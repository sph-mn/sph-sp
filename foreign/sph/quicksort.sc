(define-macro (define-quicksort name type-array type-index max-levels)
  (define (name arr elements) (b8 type-array type-index)
    (define i type-index 0)
    (define piv type-index
      beg[max-levels] type-index end[max-levels] type-index L type-index R type-index)
    (set (deref beg 0) 0) (set (deref end 0) elements)
    (while (>= i 0) (set L (deref beg i))
      (set R (- (deref end i) 1))
      (if (< L R)
        (begin (set piv (deref arr L)) (if (= i (- max-levels 1)) (return 1))
          (while (< L R)
            (while (and (>= (deref arr R) piv) (< L R)) (set R (- R 1))
              (if (< L R) (begin (set L (+ L 1)) (set (deref arr L) (deref arr R)))))
            (while (and (<= (deref arr L) piv) (< L R)) (set L (+ L 1))
              (if (< L R) (begin (set R (- R 1)) (set (deref arr R) (deref arr L))))))
          (set (deref arr L) piv) (set (deref beg (+ i 1)) (+ L 1))
          (set (deref end (+ i 1)) (deref end i)) (set i (+ i 1)) (set (deref end i) L))
        (set i (- i 1))))
    (return 0)))

(define-quicksort quicksort b32* b32 1000)